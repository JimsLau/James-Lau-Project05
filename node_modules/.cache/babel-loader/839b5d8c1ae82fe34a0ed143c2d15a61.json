{"ast":null,"code":"import _defineProperty from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/src/App.js\";\n// App inspired by Simon Bloom's Fun Food Friends\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\nimport Form from './Form.js';\nimport Results from './Results.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.handleConfirm = function (event) {\n      // Prevent referesh when submit(Add Item) button is pressed\n      event.preventDefault();\n\n      if (_this.state.currentItem && _this.state.userName) {\n        _this.handleSubmit();\n      } else {\n        alert('Please enter your name and item');\n      }\n    };\n\n    _this.handleClick = function (chosenId) {\n      var chosenProductObject = _this.state.userResults.find(function (element) {\n        return element.id === chosenId;\n      });\n\n      _this.setState({\n        chosenProductObject: chosenProductObject\n      }, function () {\n        var dbRef = firebase.database().ref();\n        dbRef.on('value', function (snapshot) {\n          var reviews = snapshot.val();\n          var newState = [];\n\n          for (var review in reviews) {\n            newState.push({\n              id: reviews[review].id,\n              name: reviews[review].name,\n              items: reviews[review].items\n            });\n          }\n\n          _this.setState({\n            reviews: newState.filter(function (review) {\n              return review.id === _this.state.chosenProductObject.id;\n            })\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      currentItem: '',\n      userName: '',\n      // Create a variable to hold items that are in the Firebase database, for printing to page.\n      items: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeItem = _this.removeItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      // Create a space in Firebase database to store users' items, using .ref into 'items'\n      var itemsRef = firebase.database().ref('items'); // Grab input info (item and username) from state to send to Firebase database\n\n      var item = {\n        item: this.state.currentItem,\n        user: this.state.userName\n      }; // Create a copy of object and push to Firebase database\n\n      itemsRef.push(item); // Clear out inputs\n\n      this.setState({\n        currentItem: '',\n        userName: ''\n      });\n    } // function to show details and reviews of selected product \n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var itemsRef = firebase.database().ref('items'); // Create a listener and a callback on items referenced inside of the database\n\n      itemsRef.on('value', function (snap) {\n        var items = snap.val(); // Instantiate a new array and populate it with results coming back from our 'value' listener\n\n        var newState = []; // Loop over each key, push result into an object inside newState array\n\n        for (var item in items) {\n          // Update the state with list of items from the database\n          newState.push({\n            id: item,\n            item: items[item].item,\n            user: items[item].user\n          });\n        }\n\n        _this2.setState({\n          items: newState\n        });\n      });\n    } // Create method to remove items from page\n\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(itemId) {\n      var itemRef = firebase.database().ref(\"/items/\".concat(itemId));\n      itemRef.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"What We Be Bringing!\"))), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        onClick: this.handleConfirm,\n        nameValue: this.state.userName,\n        itemValue: this.state.currentItem,\n        userItems: this.state.chosenProductObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(Results, {\n        items: this.state.items,\n        removeItem: this.removeItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/src/App.js"],"names":["React","Component","firebase","Form","Results","App","handleConfirm","event","preventDefault","state","currentItem","userName","handleSubmit","alert","handleClick","chosenId","chosenProductObject","userResults","find","element","id","setState","dbRef","database","ref","on","snapshot","reviews","val","newState","review","push","name","items","filter","handleChange","bind","removeItem","e","target","value","itemsRef","item","user","snap","itemId","itemRef","remove"],"mappings":";;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;;IAEMC,G;;;;;AACL,iBAAc;AAAA;;AAAA;;AACb;;AADa,UAmBdC,aAnBc,GAmBE,UAACC,KAAD,EAAW;AAC1B;AACAA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI,MAAKC,KAAL,CAAWC,WAAX,IAA0B,MAAKD,KAAL,CAAWE,QAAzC,EAAmD;AAClD,cAAKC,YAAL;AACA,OAFD,MAEO;AACNC,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACA;AACD,KA3Ba;;AAAA,UA+CdC,WA/Cc,GA+CA,UAACC,QAAD,EAAc;AAC3B,UAAMC,mBAAmB,GAAG,MAAKP,KAAL,CAAWQ,WAAX,CAAuBC,IAAvB,CAA4B,UAASC,OAAT,EAAkB;AACzE,eAAOA,OAAO,CAACC,EAAR,KAAeL,QAAtB;AACA,OAF2B,CAA5B;;AAGA,YAAKM,QAAL,CACC;AACCL,QAAAA,mBAAmB,EAAEA;AADtB,OADD,EAIC,YAAM;AACL,YAAMM,KAAK,GAAGpB,QAAQ,CAACqB,QAAT,GAAoBC,GAApB,EAAd;AACAF,QAAAA,KAAK,CAACG,EAAN,CAAS,OAAT,EAAkB,UAACC,QAAD,EAAc;AAC/B,cAAIC,OAAO,GAAGD,QAAQ,CAACE,GAAT,EAAd;AACA,cAAIC,QAAQ,GAAG,EAAf;;AACA,eAAK,IAAIC,MAAT,IAAmBH,OAAnB,EAA4B;AAC3BE,YAAAA,QAAQ,CAACE,IAAT,CAAc;AACbX,cAAAA,EAAE,EAAEO,OAAO,CAACG,MAAD,CAAP,CAAgBV,EADP;AAEbY,cAAAA,IAAI,EAAEL,OAAO,CAACG,MAAD,CAAP,CAAgBE,IAFT;AAGbC,cAAAA,KAAK,EAAEN,OAAO,CAACG,MAAD,CAAP,CAAgBG;AAHV,aAAd;AAKA;;AACD,gBAAKZ,QAAL,CAAc;AACbM,YAAAA,OAAO,EAAEE,QAAQ,CAACK,MAAT,CAAgB,UAACJ,MAAD;AAAA,qBAAYA,MAAM,CAACV,EAAP,KAAc,MAAKX,KAAL,CAAWO,mBAAX,CAA+BI,EAAzD;AAAA,aAAhB;AADI,WAAd;AAGA,SAbD;AAcA,OApBF;AAsBE,KAzEW;;AAEb,UAAKX,KAAL,GAAa;AACZC,MAAAA,WAAW,EAAE,EADD;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZ;AACAsB,MAAAA,KAAK,EAAE;AAJK,KAAb;AAMA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKxB,YAAL,GAAoB,MAAKA,YAAL,CAAkBwB,IAAlB,uDAApB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AAVa;AAWb;;;;iCAEYE,C,EAAG;AACf,WAAKjB,QAAL,qBACEiB,CAAC,CAACC,MAAF,CAASP,IADX,EACkBM,CAAC,CAACC,MAAF,CAASC,KAD3B;AAGA;;;mCAYc;AACd;AACA,UAAMC,QAAQ,GAAGvC,QAAQ,CAACqB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAjB,CAFc,CAGd;;AACA,UAAMkB,IAAI,GAAG;AACZA,QAAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWC,WADL;AAEZiC,QAAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWE;AAFL,OAAb,CAJc,CAQd;;AACA8B,MAAAA,QAAQ,CAACV,IAAT,CAAcW,IAAd,EATc,CAUd;;AACA,WAAKrB,QAAL,CAAc;AACbX,QAAAA,WAAW,EAAE,EADA;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OAAd;AAIA,K,CAED;;;;wCA8BoB;AAAA;;AACnB,UAAM8B,QAAQ,GAAGvC,QAAQ,CAACqB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAjB,CADmB,CAEnB;;AACAiB,MAAAA,QAAQ,CAAChB,EAAT,CAAY,OAAZ,EAAqB,UAACmB,IAAD,EAAU;AAC9B,YAAIX,KAAK,GAAGW,IAAI,CAAChB,GAAL,EAAZ,CAD8B,CAE9B;;AACA,YAAIC,QAAQ,GAAG,EAAf,CAH8B,CAI9B;;AACA,aAAK,IAAIa,IAAT,IAAiBT,KAAjB,EAAwB;AACvB;AACAJ,UAAAA,QAAQ,CAACE,IAAT,CAAc;AACbX,YAAAA,EAAE,EAAEsB,IADS;AAEbA,YAAAA,IAAI,EAAET,KAAK,CAACS,IAAD,CAAL,CAAYA,IAFL;AAGbC,YAAAA,IAAI,EAAEV,KAAK,CAACS,IAAD,CAAL,CAAYC;AAHL,WAAd;AAKA;;AACD,QAAA,MAAI,CAACtB,QAAL,CAAc;AACbY,UAAAA,KAAK,EAAEJ;AADM,SAAd;AAGA,OAhBD;AAiBA,K,CAED;;;;+BACWgB,M,EAAQ;AAClB,UAAMC,OAAO,GAAG5C,QAAQ,CAACqB,QAAT,GAAoBC,GAApB,kBAAkCqB,MAAlC,EAAhB;AACAC,MAAAA,OAAO,CAACC,MAAR;AACA;;;6BAEQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,CADD,CADD,EAMC,oBAAC,IAAD;AACC,QAAA,QAAQ,EAAE,KAAKnC,YADhB;AAEC,QAAA,QAAQ,EAAE,KAAKuB,YAFhB;AAGC,QAAA,OAAO,EAAE,KAAK7B,aAHf;AAIC,QAAA,SAAS,EAAE,KAAKG,KAAL,CAAWE,QAJvB;AAKC,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,WALvB;AAMC,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWO,mBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,EAcC,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWwB,KAA3B;AAAkC,QAAA,UAAU,EAAE,KAAKI,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdD,CADD;AAkBA;;;;EA5HgBpC,S;;AA+HlB,eAAeI,GAAf","sourcesContent":["// App inspired by Simon Bloom's Fun Food Friends\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\nimport Form from './Form.js';\nimport Results from './Results.js';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcurrentItem: '',\n\t\t\tuserName: '',\n\t\t\t// Create a variable to hold items that are in the Firebase database, for printing to page.\n\t\t\titems: []\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.removeItem = this.removeItem.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\n\thandleConfirm = (event) => {\n\t\t// Prevent referesh when submit(Add Item) button is pressed\n\t\tevent.preventDefault();\n\t\tif (this.state.currentItem && this.state.userName) {\n\t\t\tthis.handleSubmit();\n\t\t} else {\n\t\t\talert('Please enter your name and item');\n\t\t}\n\t};\n\n\thandleSubmit() {\n\t\t// Create a space in Firebase database to store users' items, using .ref into 'items'\n\t\tconst itemsRef = firebase.database().ref('items');\n\t\t// Grab input info (item and username) from state to send to Firebase database\n\t\tconst item = {\n\t\t\titem: this.state.currentItem,\n\t\t\tuser: this.state.userName\n\t\t};\n\t\t// Create a copy of object and push to Firebase database\n\t\titemsRef.push(item);\n\t\t// Clear out inputs\n\t\tthis.setState({\n\t\t\tcurrentItem: '',\n\t\t\tuserName: ''\n\t\t});\n\t}\n\t\n\t// function to show details and reviews of selected product \n\thandleClick = (chosenId) => {\n\t\tconst chosenProductObject = this.state.userResults.find(function(element) {\n\t\t\treturn element.id === chosenId;\n\t\t});\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tchosenProductObject: chosenProductObject\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst dbRef = firebase.database().ref();\n\t\t\t\tdbRef.on('value', (snapshot) => {\n\t\t\t\t\tlet reviews = snapshot.val();\n\t\t\t\t\tlet newState = [];\n\t\t\t\t\tfor (let review in reviews) {\n\t\t\t\t\t\tnewState.push({\n\t\t\t\t\t\t\tid: reviews[review].id,\n\t\t\t\t\t\t\tname: reviews[review].name,\n\t\t\t\t\t\t\titems: reviews[review].items\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\treviews: newState.filter((review) => review.id === this.state.chosenProductObject.id)\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t);\n  \t};\n\t\n\n\tcomponentDidMount() {\n\t\tconst itemsRef = firebase.database().ref('items');\n\t\t// Create a listener and a callback on items referenced inside of the database\n\t\titemsRef.on('value', (snap) => {\n\t\t\tlet items = snap.val();\n\t\t\t// Instantiate a new array and populate it with results coming back from our 'value' listener\n\t\t\tlet newState = [];\n\t\t\t// Loop over each key, push result into an object inside newState array\n\t\t\tfor (let item in items) {\n\t\t\t\t// Update the state with list of items from the database\n\t\t\t\tnewState.push({\n\t\t\t\t\tid: item,\n\t\t\t\t\titem: items[item].item,\n\t\t\t\t\tuser: items[item].user\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\titems: newState\n\t\t\t});\n\t\t});\n\t}\n\n\t// Create method to remove items from page\n\tremoveItem(itemId) {\n\t\tconst itemRef = firebase.database().ref(`/items/${itemId}`);\n\t\titemRef.remove();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<header>\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<h1>What We Be Bringing!</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonClick={this.handleConfirm}\n\t\t\t\t\tnameValue={this.state.userName}\n\t\t\t\t\titemValue={this.state.currentItem}\n\t\t\t\t\tuserItems={this.state.chosenProductObject}\n\t\t\t\t/>\n\t\t\t\t<Results items={this.state.items} removeItem={this.removeItem} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}