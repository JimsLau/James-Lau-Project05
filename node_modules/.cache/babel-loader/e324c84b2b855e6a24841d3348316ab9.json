{"ast":null,"code":"import _defineProperty from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\nimport Form from './Form.js';\nimport Results from './Results.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.handleConfirm = function (event) {\n      event.preventDefault();\n\n      if (_this.state.currentItem && _this.state.userName) {\n        _this.handleSubmit();\n      } else {\n        alert(\"Please enter your name and item\");\n      }\n    };\n\n    _this.state = {\n      currentItem: '',\n      userName: '',\n      // Create a variable to hold items that are in the Firebase database, for printing to page.\n      items: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeItem = _this.removeItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      // Prevent referesh when submit(Add Item) button is pressed\n      // e.preventDefault();\n      // Create a space in Firebase database to store users' items, using .ref into 'items'\n      var itemsRef = firebase.database().ref('items'); // Grab input info (item and username) from state to send to Firebase database\n\n      var item = {\n        item: this.state.currentItem,\n        user: this.state.userName\n      }; // Create a copy of object and push to Firebase database\n\n      itemsRef.push(item); // Clear out inputs\n\n      this.setState({\n        currentItem: '',\n        userName: ''\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var itemsRef = firebase.database().ref('items'); // Create a listener and a callback on items referenced inside of the database\n\n      itemsRef.on('value', function (snap) {\n        var items = snap.val(); // Instantiate a new array and populate it with results coming back from our 'value' listener\n\n        var newState = []; // Loop over each key, push result into an object inside newState array\n\n        for (var item in items) {\n          // Update the state with list of items from the database\n          newState.push({\n            id: item,\n            item: items[item].item,\n            user: items[item].user\n          });\n        }\n\n        _this2.setState({\n          items: newState\n        });\n      });\n    } // Create method to remove items from page\n\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(itemId) {\n      var itemRef = firebase.database().ref(\"/items/\".concat(itemId));\n      itemRef.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"What We Be Bringing!\"))), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        onClick: this.handleConfirm,\n        nameValue: this.state.userName,\n        itemValue: this.state.currentItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Results, {\n        items: this.state.items,\n        removeItem: this.removeItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/james/Public/GitHub/HackerYouCohort21/Projects/Project05/what-we-be-bringing/src/App.js"],"names":["React","Component","firebase","Form","Results","App","handleConfirm","event","preventDefault","state","currentItem","userName","handleSubmit","alert","items","handleChange","bind","removeItem","e","setState","target","name","value","itemsRef","database","ref","item","user","push","on","snap","val","newState","id","itemId","itemRef","remove"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport firebase from './firebase.js';\nimport Form from './Form.js';\nimport Results from './Results.js';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcurrentItem: '',\n\t\t\tuserName: '',\n\t\t\t// Create a variable to hold items that are in the Firebase database, for printing to page.\n\t\t\titems: []\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.removeItem = this.removeItem.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t}\n\nhandleSubmit() {\n\t\t// Prevent referesh when submit(Add Item) button is pressed\n\t\t// e.preventDefault();\n\t\t// Create a space in Firebase database to store users' items, using .ref into 'items'\n\t\tconst itemsRef = firebase.database().ref('items');\n\t\t// Grab input info (item and username) from state to send to Firebase database\n\t\tconst item = {\n\t\t\titem: this.state.currentItem,\n\t\t\tuser: this.state.userName\n\t\t};\n\t\t// Create a copy of object and push to Firebase database\n\t\titemsRef.push(item);\n\t\t// Clear out inputs\n\t\tthis.setState({\n\t\t\tcurrentItem: '',\n\t\t\tuserName: ''\n\t\t});\n\t}\n\n\thandleConfirm=(event) => {\n\t\tevent.preventDefault()\n\t\tif(this.state.currentItem && this.state.userName){\n\t\t\tthis.handleSubmit()\n\t\t} else {alert(\"Please enter your name and item\")}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst itemsRef = firebase.database().ref('items');\n\t\t// Create a listener and a callback on items referenced inside of the database\n\t\titemsRef.on('value', (snap) => {\n\t\t\tlet items = snap.val();\n\t\t\t// Instantiate a new array and populate it with results coming back from our 'value' listener\n\t\t\tlet newState = [];\n\t\t\t// Loop over each key, push result into an object inside newState array\n\t\t\tfor (let item in items) {\n\t\t\t\t// Update the state with list of items from the database\n\t\t\t\tnewState.push({\n\t\t\t\t\tid: item,\n\t\t\t\t\titem: items[item].item,\n\t\t\t\t\tuser: items[item].user\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\titems: newState\n\t\t\t});\n\t\t});\n\t}\n\n\t// Create method to remove items from page\n\tremoveItem(itemId) {\n\t\tconst itemRef = firebase.database().ref(`/items/${itemId}`);\n\t\titemRef.remove();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<header>\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<h1>What We Be Bringing!</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonClick={this.handleConfirm}\n\t\t\t\t\tnameValue={this.state.userName}\n\t\t\t\t\titemValue={this.state.currentItem}\n\t\t\t\t/>\n\t\t\t\t<Results items={this.state.items} removeItem={this.removeItem} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}